esphome:
  name: espaper-dashboard
  friendly_name: ESPaper Dashboard

host:

external_components:
  - source:
      type: local
      path: ../components

display:
  - platform: sdl
    id: the_display
    show_test_card: true
    dimensions:
      width: 480
      height: 800

color:
  - id: color_white
    red: 100%
    green: 100%
    blue: 100%
    white: 100%
  - id: color_light_gray
    red: 67%
    green: 67%
    blue: 67%
    white: 67%
  - id: color_dark_gray
    red: 33%
    green: 33%
    blue: 33%
    white: 33%
  - id: color_black
    red: 0%
    green: 0%
    blue: 0%
    white: 0%

font:
  - id: default_font
    file: gfonts://Roboto
    size: 20
    bpp: 2
    glyphsets:
      - GF_Latin_Kernel
  - id: large_font
    file: gfonts://Roboto@900
    size: 42
    bpp: 2
    glyphsets:
      - GF_Latin_Kernel
  - id: glyph_font
    file: gfonts://Material+Symbols
    glyphs: &mdi-weather-glyphs
      - "\ue2bd" # CONDITION_CLOUDY
      - "\ue818" # CONDITION_FOG
      - "\uf67f" # CONDITION_HAIL
      - "\uebdb" # CONDITION_LIGHTNING, CONDITION_LIGHTNING_RAINY
      - "\uef44" # CONDITION_CLEAR_NIGHT
      - "\uf172" # CONDITION_PARTLYCLOUDY
      - "\uf61f" # CONDITION_POURING
      - "\uf176" # CONDITION_RAINY
      - "\ue2cd" # CONDITION_SNOWY
      - "\uf61d" # CONDITION_SNOWY_RAINY
      - "\ue81a" # CONDITION_SUNNY
      - "\uefd8" # CONDITION_WINDY, CONDITION_WINDY_VARIANT
  - id: glyph_font_large
    file: gfonts://Material+Symbols+Outlined
    size: 42
    glyphs: *mdi-weather-glyphs

espaper_dashboard:
  background_color: color_white
  foreground_color: color_black
  light_color: color_light_gray
  dark_color: color_dark_gray
  default_font: default_font
  large_font: large_font
  glyph_font: glyph_font
  large_glyph_font: glyph_font_large
  widgets:
    - id: urgent_message
      type: message
      # icon: "\uf61d"
      message: !lambda 'return "Downpour expected";'
    - id: weather_today
      type: weather
      current_condition: !lambda "return id(weather_current_condition).state;"
      current_temperature: 21 # !lambda "return id(weather_current_temperature).state;"
      # forecast:
      #   - title: 1
      #     temperature: 23.3
      #     condition: lightning
      forecast: !lambda |-
        std::vector<espaper_dashboard_widgets::WeatherStatus> v{
          espaper_dashboard_widgets::WeatherStatus("now", 23.3, "lightning"),
          espaper_dashboard_widgets::WeatherStatus("soon", 21.7, "lightning-rainy"),
          espaper_dashboard_widgets::WeatherStatus("later", 20.1, "partlycloudy")
        };
        return v;
      priority: 2

sensor:
  - platform: homeassistant
    id: weather_current_temperature
    entity_id: sensor.hourly_weather_forecast
    attribute: current_temperature

text_sensor:
  - platform: homeassistant
    id: weather_current_condition
    name: Weather current condition
    entity_id: sensor.hourly_weather_forecast
    attribute: current_condition
  - platform: homeassistant
    id: weather_hourly_forecast
    entity_id: sensor.hourly_weather_forecast
    attribute: forecast

binary_sensor:
  - id: space_key
    platform: sdl
    key: SDLK_SPACE
    on_release:
      - component.update: the_display
